{"ast":null,"code":"var _jsxFileName = \"C:\\\\webdev\\\\gpa\\\\src\\\\GPATable.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { Container, Row, Col, Table, Button } from \"react-bootstrap\";\nimport { FaTrash } from 'react-icons/fa';\nimport LineChart from './LineChart'; // Stores semester data\n// semGPA stores semesters\n// semGPA stores semesters, grade, creds, gpa\n// semGPA stores gpa\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar semGPA = [];\nvar semGPA2 = [];\nvar semGPA3 = [];\n\nfunction GPATable(_ref) {\n  _s();\n\n  let {\n    data,\n    setDataItems,\n    subData\n  } = _ref;\n  const [dataRows, setDataRows] = useState();\n  const [totalGPA, setTotalGPA] = useState(0);\n  const styles = {\n    textCenter: {\n      textAlign: 'center'\n    },\n    textRight: {\n      textAlign: 'right'\n    },\n    textLeft: {\n      textAlign: 'left'\n    }\n  };\n  useEffect(() => {\n    let gpa = 0;\n    let currGrade = 0;\n    let cred = 0;\n    let totalCred = 0; //let count = 0\n\n    const z = data.map((v, i) => {\n      // Get grade\n      if (v.grade === \"A\") {\n        currGrade = \"4.00\";\n      } else if (v.grade === \"A-\") {\n        currGrade = \"3.75\";\n      } else if (v.grade === \"B+\") {\n        currGrade = \"3.25\";\n      } else if (v.grade === \"B\") {\n        currGrade = \"3.00\";\n      } else if (v.grade === \"B-\") {\n        currGrade = \"2.75\";\n      } else if (v.grade === \"C+\") {\n        currGrade = \"2.25\";\n      } else if (v.grade === \"C\") {\n        currGrade = \"2.00\";\n      } else if (v.grade === \"C-\") {\n        currGrade = \"1.75\";\n      } else if (v.grade === \"D\") {\n        currGrade = \"1.00\";\n      } else if (v.grade === \"F\") {\n        currGrade = \"0.00\";\n      } else if (v.grade === \"-\") {\n        currGrade = \"0.00\"; //count -= 1\n      } // Get credits and total credits\n\n\n      subData.forEach(e => {\n        //console.log(e)\n        if (v.grade !== \"-\" && e[0] === v.sub) {\n          cred = e[2];\n          totalCred += Number(cred);\n        }\n      }); // Get part of gpa: SUM(grade * credits)\n\n      gpa += Number(currGrade) * Number(cred); //count += 1\n\n      let sem = \"\" + v.term + \"/\" + v.year;\n      let existInArr = semGPA.indexOf(sem) > -1;\n      let semChanged = false; // If new semester, push\n\n      if (existInArr === false) {\n        semGPA.push(sem);\n        semChanged = true;\n      } //console.log(\"semesters\", semGPA)\n      // If new semester added, push\n\n\n      if (semChanged === true) {\n        semGPA2.push([sem, 0, 0, 0, 0]); // semester, grade, cred, SUM(grade * credits), gpa\n\n        semGPA3.push([sem, 0]); // semester, gpa\n      } // Calculate each semester's grade, creds, gpa\n\n\n      let currGPA = 0;\n      semGPA2.forEach(s => {\n        if (s[0] === sem) {\n          s[1] += Number(currGrade); //total grade\n\n          s[2] += Number(cred); //total creds\n\n          s[3] += Number(currGrade) * Number(cred); // total grade * total creds\n\n          s[4] = s[3] / s[2]; //total gpa\n\n          currGPA = s[4];\n        } //console.log(s)\n\n      }); //console.log(\"semesters stats\", semGPA2)\n\n      semGPA3.forEach(sg => {\n        if (sg[0] === sem) {\n          sg[1] = currGPA;\n        }\n      }); //console.log(\"semester, gpa\", semGPA3)\n\n      return /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(FaTrash, {\n            onClick: () => deleteClick(i)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          style: styles.textleft,\n          children: [v.term, \"/\", v.year]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          style: styles.textleft,\n          children: v.sub\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          style: styles.textLeft,\n          children: v.grade\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this);\n    });\n    console.log(\"sum gpa, credits:\", gpa, totalCred);\n    setDataRows(z);\n    setTotalGPA(gpa / totalCred); // SUM(grade * credits) / SUM(credits) \n  }, [data]); // Clear table's data\n\n  const clearData = () => {\n    setDataItems([]);\n    setDataRows([]);\n    console.log('cleared items');\n  }; // Delete 1 item from table\n\n\n  const deleteClick = i => {\n    console.log(i, 'deleted!');\n    data.splice(i, 1);\n    setDataItems([...data]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Kasidit's GPA\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: clearData,\n          variant: \"dark\",\n          children: \"Clear\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Semester\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Subject\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Grade\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: dataRows\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tfoot\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            colSpan: 2\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            style: styles.textRight,\n            children: \"GPA\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            style: styles.textRight,\n            children: totalGPA.toFixed(2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(LineChart, {\n        semData: semGPA3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 7\n  }, this);\n}\n\n_s(GPATable, \"0/Szmyt6Cf4zFnVxM0fGxjmiLNE=\");\n\n_c = GPATable;\nexport default GPATable;\n\nvar _c;\n\n$RefreshReg$(_c, \"GPATable\");","map":{"version":3,"sources":["C:/webdev/gpa/src/GPATable.js"],"names":["useState","useEffect","Container","Row","Col","Table","Button","FaTrash","LineChart","semGPA","semGPA2","semGPA3","GPATable","data","setDataItems","subData","dataRows","setDataRows","totalGPA","setTotalGPA","styles","textCenter","textAlign","textRight","textLeft","gpa","currGrade","cred","totalCred","z","map","v","i","grade","forEach","e","sub","Number","sem","term","year","existInArr","indexOf","semChanged","push","currGPA","s","sg","deleteClick","textleft","console","log","clearData","splice","toFixed"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\nimport { Container, Row, Col, Table, Button } from \"react-bootstrap\";\nimport { FaTrash } from 'react-icons/fa';\nimport LineChart from './LineChart';\n\n// Stores semester data\n      // semGPA stores semesters\n      // semGPA stores semesters, grade, creds, gpa\n      // semGPA stores gpa\n      var semGPA = []\n      var semGPA2 = []\n      var semGPA3 = []\n\nfunction GPATable({ data, setDataItems, subData }) {\n\n    const [dataRows, setDataRows] = useState();\n    const [totalGPA, setTotalGPA] = useState(0);\n\n    const styles = {\n      textCenter: {textAlign: 'center'},\n      textRight: {textAlign: 'right'},\n      textLeft: {textAlign: 'left'}\n    }\n\n    useEffect(() => {\n\n      let gpa = 0\n      let currGrade = 0\n      let cred = 0\n      let totalCred = 0\n      //let count = 0\n\n      const z = data.map((v, i) => {\n\n        // Get grade\n        if (v.grade === \"A\") {\n          currGrade = \"4.00\"\n        } else if (v.grade === \"A-\") {\n          currGrade = \"3.75\"\n        } else if (v.grade === \"B+\") {\n          currGrade = \"3.25\"\n        } else if (v.grade === \"B\") {\n          currGrade = \"3.00\"\n        } else if (v.grade === \"B-\") {\n          currGrade = \"2.75\"\n        } else if (v.grade === \"C+\") {\n          currGrade = \"2.25\"\n        } else if (v.grade === \"C\") {\n          currGrade = \"2.00\"\n        } else if (v.grade === \"C-\") {\n          currGrade = \"1.75\"\n        } else if (v.grade === \"D\") {\n          currGrade = \"1.00\"\n        } else if (v.grade === \"F\") {\n          currGrade = \"0.00\"\n        } else if (v.grade === \"-\") {\n          currGrade = \"0.00\"\n          //count -= 1\n        }\n\n        // Get credits and total credits\n        subData.forEach((e) => {\n          //console.log(e)\n          if (v.grade !== \"-\" && e[0] === v.sub) {\n            cred = e[2]\n            totalCred += Number(cred)\n          }\n        })\n\n        // Get part of gpa: SUM(grade * credits)\n        gpa += Number(currGrade) * Number(cred) \n        //count += 1\n\n        let sem = \"\" + v.term + \"/\" + v.year\n        let existInArr = semGPA.indexOf(sem) > -1\n        let semChanged = false\n        // If new semester, push\n        if (existInArr === false) {\n          semGPA.push(sem)\n          semChanged = true\n        }\n        //console.log(\"semesters\", semGPA)\n\n        // If new semester added, push\n        if (semChanged === true) {\n          semGPA2.push([sem, 0, 0, 0, 0]) // semester, grade, cred, SUM(grade * credits), gpa\n          semGPA3.push([sem, 0]) // semester, gpa\n        }\n\n        // Calculate each semester's grade, creds, gpa\n        let currGPA = 0\n        semGPA2.forEach((s) => {\n          if (s[0] === sem) {\n            s[1] += Number(currGrade) //total grade\n            s[2] += Number(cred) //total creds\n            s[3] += Number(currGrade) * Number(cred) // total grade * total creds\n            s[4] = s[3] / s[2] //total gpa\n            currGPA = s[4]\n          }\n          //console.log(s)\n        })\n        //console.log(\"semesters stats\", semGPA2)\n\n        semGPA3.forEach((sg) => {\n          if (sg[0] === sem) {\n            sg[1] = currGPA\n          }\n        })\n        //console.log(\"semester, gpa\", semGPA3)\n        \n        return (\n          <tr key={i}>\n            <td><FaTrash onClick={() => deleteClick(i)}/></td>\n            <td style={styles.textleft}>{v.term}{\"/\"}{v.year}</td>\n            <td style={styles.textleft}>{v.sub}</td>\n            <td style={styles.textLeft}>{v.grade}</td>\n          </tr>\n        );\n      });\n    console.log(\"sum gpa, credits:\", gpa, totalCred)\n    setDataRows(z);\n    setTotalGPA(gpa / totalCred) // SUM(grade * credits) / SUM(credits) \n    }, [data]);\n\n    // Clear table's data\n    const clearData = () => {\n      setDataItems([])\n      setDataRows([])\n      console.log('cleared items')\n    }\n\n    // Delete 1 item from table\n    const deleteClick = (i) => {\n      console.log(i, 'deleted!')\n      data.splice(i,1)\n      setDataItems([...data])\n    }\n\n    return (\n      <Container>\n\n        <Row>\n\n          <Col>\n            <h2>Kasidit's GPA</h2>\n          </Col>\n\n          <Col>\n            <Button onClick={clearData} variant=\"dark\">Clear</Button>\n          </Col>\n\n        </Row>\n\n        <Table striped bordered hover>\n\n          <thead>\n            <tr>\n              <th></th>\n              <th>Semester</th>\n              <th>Subject</th>\n              <th>Grade</th>\n            </tr>\n          </thead>\n\n          <tbody>\n            {dataRows}\n          </tbody>\n\n          <tfoot>\n            <tr>\n              <th colSpan={2}></th>\n              <th style={styles.textRight}>GPA</th>\n              <th style={styles.textRight}>{(totalGPA).toFixed(2)}</th>\n            </tr>\n          </tfoot>\n\n        </Table>\n\n        <Row>\n          <LineChart semData={semGPA3}/>\n        </Row>\n\n        </Container>\n    )\n}\n\nexport default GPATable;"]},"metadata":{},"sourceType":"module"}