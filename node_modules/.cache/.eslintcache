[{"C:\\webdev\\mt\\src\\index.js":"1","C:\\webdev\\mt\\src\\App.js":"2","C:\\webdev\\mt\\src\\reportWebVitals.js":"3","C:\\webdev\\mt\\src\\QuotationTable.js":"4","C:\\webdev\\gpa\\src\\index.js":"5","C:\\webdev\\gpa\\src\\reportWebVitals.js":"6","C:\\webdev\\gpa\\src\\App.js":"7","C:\\webdev\\gpa\\src\\gpaTable.js":"8","C:\\webdev\\gpa\\src\\GPATable.js":"9"},{"size":517,"mtime":1642422548111,"results":"10","hashOfConfig":"11"},{"size":3168,"mtime":1642499133302,"results":"12","hashOfConfig":"11"},{"size":375,"mtime":1642422548112,"results":"13","hashOfConfig":"11"},{"size":2752,"mtime":1642498538859,"results":"14","hashOfConfig":"11"},{"size":289,"mtime":1643792514115,"results":"15","hashOfConfig":"16"},{"size":362,"mtime":1643779054000,"results":"17","hashOfConfig":"16"},{"size":3684,"mtime":1643792921246,"results":"18","hashOfConfig":"16"},{"size":4898,"mtime":1643779054000,"results":"19","hashOfConfig":"16"},{"size":4148,"mtime":1643792193296,"results":"20","hashOfConfig":"16"},{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"fqfmdm",{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"hohydl",{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},"C:\\webdev\\mt\\src\\index.js",[],"C:\\webdev\\mt\\src\\App.js",["44","45"],"import { useState, useRef, useEffect } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport QuotationTable from \"./QuotationTable\";\r\n\r\nimport { Container, Row, Col, Form, Button } from \"react-bootstrap\";\r\n\r\nimport useLocalStorage from 'react-localstorage-hook'\r\n\r\nfunction App() {\r\n  const itemRef = useRef();\r\n  const ppuRef = useRef();\r\n  const qtyRef = useRef();\r\n  const disRef = useRef();\r\n\r\n  // const [dataItems, setDataItems] = useState([]);\r\n  const [dataItems, setDataItems] = useLocalStorage(\"dataItems\",[]);\r\n  \r\n\r\n\r\n  const dummyProductList = [\r\n    { id: \"p001\", name: 'Samsung LED TV 52\"', price: 15000 },\r\n    { id: \"p002\", name: \"Xiaomi Air Purifier\", price: 4000 },\r\n    { id: \"p003\", name: \"Brother Laserjet Printer\", price: 5500 },\r\n    { id: \"p004\", name: \"Bose Speaker\", price: 20000 },\r\n  ];\r\n\r\n  const addItem = () => {\r\n    if (itemRef.current.value === \"\") {\r\n      alert(\"Item name is empty\");\r\n      return;\r\n    }\r\n\r\n    const pid = itemRef.current.value;\r\n    const product = dummyProductList.find((e) => e.id === pid);\r\n\r\n    var itemObj = {\r\n      pid: pid,\r\n      item: product.name,\r\n      ppu: ppuRef.current.value,\r\n      qty: qtyRef.current.value,\r\n      dis: disRef.current.value,\r\n    };\r\n\r\n    dataItems.push(itemObj);\r\n    setDataItems([...dataItems]);   \r\n  };\r\n\r\n  const productChange = (e) => {\r\n    const pid = itemRef.current.value;\r\n    const product = dummyProductList.find((e) => e.id === pid);\r\n    ppuRef.current.value = product.price\r\n  }\r\n\r\n  const options = dummyProductList.map((v) => {\r\n    return <option value={v.id}>{v.name}</option>;\r\n  });\r\n\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <Col xs={5} style={{ backgroundColor: \"#eaeaea\" }}>\r\n          <Form>\r\n            <Form.Group className=\"mb-3\" controlId=\"formItem\">\r\n              <Form.Label>Item</Form.Label>\r\n              <Form.Select\r\n                aria-label=\"Default select example\"\r\n                ref={itemRef}\r\n                onChange={productChange}\r\n              >\r\n                {options}\r\n              </Form.Select>\r\n            </Form.Group>\r\n\r\n            <Form.Group className=\"mb-3\" controlId=\"formPrice\">\r\n              <Form.Label>Price</Form.Label>\r\n              <Form.Control\r\n                type=\"number\"\r\n                placeholder=\"Price Per Unit\"\r\n                ref={ppuRef}\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group className=\"mb-3\" controlId=\"formQuantity\">\r\n              <Form.Label>Quantity</Form.Label>\r\n              <Form.Control type=\"number\" placeholder=\"Quantity\" ref={qtyRef} />\r\n            </Form.Group>\r\n\r\n            <Form.Group className=\"mb-3\" controlId=\"formDiscount\">\r\n              <Form.Label>Discount</Form.Label>\r\n              <Form.Control type=\"number\" placeholder=\"Discount\" ref={disRef} />\r\n            </Form.Group>\r\n\r\n            <Button variant=\"outline-dark\" onClick={addItem}>\r\n              Add\r\n            </Button>\r\n          </Form>\r\n        </Col>\r\n        <Col>\r\n          <QuotationTable data={dataItems} setDataItems={setDataItems} />\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\webdev\\mt\\src\\reportWebVitals.js",[],"C:\\webdev\\mt\\src\\QuotationTable.js",["46","47"],"import { useState, useRef, useEffect } from \"react\";\r\nimport { Container, Row, Col, Table, Button } from \"react-bootstrap\";\r\n\r\nimport { FaTrash } from 'react-icons/fa';\r\n\r\nconst styles = {\r\n  textCenter: { textAlign: \"center\" },\r\n  textRight: { textAlign: \"right\" },\r\n};\r\n\r\nfunction QuotationTable({ data, setDataItems }) {\r\n  const [dataRows, setDataRows] = useState();\r\n  const [totalPrice, setTotalPrice] = useState(0);\r\n  const [calDiscount, setCalDiscount] = useState(0);\r\n\r\n  useEffect(() => {\r\n    let sum = 0;\r\n    let discount = 0;\r\n    let disTol = 0;\r\n    const z = data.map((v, i) => {\r\n      let amount = v.qty * v.ppu;\r\n      let outDis = amount - v.dis;\r\n      sum += amount;\r\n      disTol += v.dis * 1;\r\n      if (sum < 0) sum = 0;\r\n      discount += outDis;\r\n      if (discount < 0) discount = 0;\r\n      return (\r\n        <tr key={i}>\r\n          <td><FaTrash onClick={() => deleteClick(i)}/></td>\r\n          <td style={styles.textCenter}>{v.qty}</td>\r\n          <td>{v.item}</td>\r\n          <td style={styles.textRight}>{numberWithCommas(v.ppu)}</td>\r\n          <td style={styles.textRight}>{numberWithCommas(amount)}</td>\r\n          <td style={styles.textRight}>{numberWithCommas(v.dis)}</td>\r\n        </tr>\r\n      );\r\n    });\r\n\r\n    setDataRows(z);\r\n    setTotalPrice(disTol);\r\n    setCalDiscount(discount);\r\n  }, [data]);\r\n\r\n  const deleteClick = (i) => {\r\n    data.splice(i,1)\r\n    setDataItems([...data])\r\n  }\r\n\r\n  const numberWithCommas = (x) => {\r\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n  };\r\n\r\n  const clearTable = () => {\r\n    setDataItems([]);\r\n    setDataRows([]);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <Col>\r\n          <h1>Kasidit's Quotation Table</h1>\r\n        </Col>\r\n        <Col style={styles.textRight}>\r\n          <Button onClick={clearTable} variant=\"dark\">\r\n            Clear\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n      <Table striped bordered hover>\r\n        <thead>\r\n          <tr>\r\n            <th></th>\r\n            <th>Qty</th>\r\n            <th>Item</th>\r\n            <th>Price/Unit</th>\r\n            <th>Amount</th>\r\n            <th>Discount</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>{dataRows}</tbody>\r\n        <tfoot>\r\n        <tr>\r\n          <th colSpan={3}></th>\r\n            <th style={styles.textCenter}>Total Discount</th>\r\n            <th style={styles.textRight}>{numberWithCommas(totalPrice)}</th>\r\n          </tr>\r\n          <tr>\r\n            <th colSpan={3}></th>\r\n            <th style={styles.textCenter}>Total</th>\r\n            <th style={styles.textRight}>{numberWithCommas(calDiscount)}</th>\r\n          </tr>\r\n          \r\n        </tfoot>\r\n      </Table>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default QuotationTable;\r\n","C:\\webdev\\gpa\\src\\index.js",[],"C:\\webdev\\gpa\\src\\reportWebVitals.js",[],["48","49"],"C:\\webdev\\gpa\\src\\App.js",["50"],"import \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Container, Row, Col, Form, Button } from \"react-bootstrap\";\nimport { useRef, useState  } from 'react';\nimport useLocalStorage from 'react-localstorage-hook';\nimport Data from './cs-2019.json';\nimport GPATable from './GPATable';\n\nfunction App() {\n\n  const yearRef = useRef();\n  const termRef = useRef();\n  const subRef = useRef();\n  const gradeRef = useRef();\n\n  \n  const [dataItems, setDataItems] = useLocalStorage(\"dataItems\", []);\n\n  \n  var subData = []\n\n  \n  var x = []\n  const subjects = Data.curriculum.subjects.map((v, i) => {\n    x = [] \n    \n    v.subjects.forEach((e, j) => {\n      \n      x.push(<option key={j} value={e.name}>{e.code} {e.name}</option>)\n      \n      subData.push([e.name, e.code, e.credits])\n    })\n    \n    return x\n  })\n\n  \n  const addItem = () => {\n\n    \n    var itemObj = {\n      year: yearRef.current.value,\n      term: termRef.current.value,\n      sub: subRef.current.value,\n      grade: gradeRef.current.value\n    }\n\n    \n    console.log('before', dataItems)\n    dataItems.push(itemObj)\n    \n    setDataItems([...dataItems])\n    console.log('after', dataItems)\n  }\n\n  return (\n    <Container>\n\n      <Row>\n        <Col xs={5} style={{backgroundColor: '#1EBBD7'}}>\n          <br/><h2>GPA Calculator</h2><br/>\n          <Form>\n\n            <Row>\n              <Form.Group as={Col} className=\"mb-3\" controlId=\"formTerm\">\n                <Form.Label>Term</Form.Label>\n                <Form.Select aria-label=\"Select Term\" ref={termRef}>\n                  <option value=\"1\">1</option>\n                  <option value=\"2\">2</option>\n                  <option value=\"3\">3</option>\n                </Form.Select>\n                \n              </Form.Group>    \n              <Form.Group as={Col} className=\"mb-3\" controlId=\"formYear\">\n                <Form.Label>Year</Form.Label>\n                <Form.Select aria-label=\"Select Year\" ref={yearRef}>\n                  <option value=\"2017\">2017</option>\n                  <option value=\"2018\">2018</option>\n                  <option value=\"2019\">2019</option>\n                  <option value=\"2020\">2020</option>\n                  <option value=\"2021\">2021</option>\n                  <option value=\"2022\">2022</option>\n                </Form.Select>\n              </Form.Group> \n            </Row>  \n\n            <Form.Group as={Col} className=\"mb-3\" controlId=\"formSubject\">\n              <Form.Label>Subject</Form.Label>\n              <Form.Select aria-label=\"Select Subjects\" ref={subRef}>\n                {subjects}\n              </Form.Select>\n            </Form.Group>\n\n            <Form.Group as={Col} className=\"mb-3\" controlId=\"formGrade\">\n              <Form.Label>Grade</Form.Label>\n              <Form.Select aria-label=\"Select Grade\" ref={gradeRef}>\n                <option value=\"A\">A</option>\n                <option value=\"A-\">A-</option>\n                <option value=\"B+\">B+</option>\n                <option value=\"B\">B</option>\n                <option value=\"B-\">B-</option>\n                <option value=\"C+\">C+</option>\n                <option value=\"C\">C</option>\n                <option value=\"C-\">C-</option>\n                <option value=\"D\">D</option>\n                <option value=\"F\">F</option>\n                <option value=\"-\">W, I, S, U, R, TR</option>\n              </Form.Select>\n            </Form.Group>\n\n            <Button variant=\"success\" onClick={addItem}>\n              Calculate\n            </Button>\n\n          </Form>\n        </Col>\n\n        <Col>\n          <GPATable data={dataItems} setDataItems={setDataItems} subData={subData}/>\n        </Col>\n\n      </Row>\n\n    </Container>\n  );\n}\n\nexport default App;\n","C:\\webdev\\gpa\\src\\gpaTable.js",["51"],"C:\\webdev\\gpa\\src\\GPATable.js",["52"],"import { useState, useEffect } from 'react';\nimport { Container, Row, Col, Table, Button } from \"react-bootstrap\";\nimport { FaBan } from 'react-icons/fa';\n\n\n      var termGPA1 = []\n      var termGPA2 = []\n      var termGPA3 = []\n\nfunction GPATable({ data, setDataItems, subData }) {\n\n    const [dataRows, setDataRows] = useState();\n    const [totalGPA, setTotalGPA] = useState(0);\n\n    const styles = {\n      textCenter: {textAlign: 'center'},\n      textRight: {textAlign: 'right'},\n      textLeft: {textAlign: 'left'}\n    }\n\n    useEffect(() => {\n      let credit = 0\n      let gpa = 0\n      let currrentGrade = 0\n      let totalCredit = 0\n      \n\n      const z = data.map((v, i) => {\n\n        \n        if (v.grade === \"A\") {\n          currrentGrade = \"4.00\"\n        } else if (v.grade === \"A-\") {\n          currrentGrade = \"3.75\"\n        } else if (v.grade === \"B+\") {\n          currrentGrade = \"3.25\"\n        } else if (v.grade === \"B\") {\n          currrentGrade = \"3.00\"\n        } else if (v.grade === \"B-\") {\n          currrentGrade = \"2.75\"\n        } else if (v.grade === \"C+\") {\n          currrentGrade = \"2.25\"\n        } else if (v.grade === \"C\") {\n          currrentGrade = \"2.00\"\n        } else if (v.grade === \"C-\") {\n          currrentGrade = \"1.75\"\n        } else if (v.grade === \"D\") {\n          currrentGrade = \"1.00\"\n        } else if (v.grade === \"F\") {\n          currrentGrade = \"0.00\"\n        } else if (v.grade === \"-\") {\n          currrentGrade = \"0.00\"\n        }\n\n        \n        subData.forEach((e) => {\n          \n          if (v.grade !== \"-\" && e[0] === v.sub) {\n            credit = e[2]\n            totalCredit += Number(credit)\n          }\n        })\n\n        \n        gpa += Number(currrentGrade) * Number(credit) \n        \n\n        let sem = \"\" + v.term + \"/\" + v.year\n        let existInArr = termGPA1.indexOf(sem) > -1\n        let semChanged = false\n        if (existInArr === false) {\n          termGPA1.push(sem)\n          semChanged = true\n        }\n        \n\n        \n        if (semChanged === true) {\n          termGPA2.push([sem, 0, 0, 0, 0]) \n          termGPA3.push([sem, 0]) \n        }\n\n        \n        let currentGPA = 0\n        termGPA2.forEach((s) => {\n          if (s[0] === sem) {\n            s[1] += Number(currrentGrade) \n            s[2] += Number(credit) \n            s[3] += Number(currrentGrade) * Number(credit)\n            s[4] = s[3] / s[2] \n            currentGPA = s[4]\n          }\n          \n        })\n        \n\n        termGPA3.forEach((sg) => {\n          if (sg[0] === sem) {\n            sg[1] = currentGPA\n          }\n        })\n        \n        \n        return (\n          <tr key={i}>\n            <td><FaBan onClick={() => deleteClick(i)}/></td>\n            <td style={styles.textCenter}>{v.sub}</td>\n            <td style={styles.textCenter}>{v.term}{\"/\"}{v.year}</td>\n            <td style={styles.textCenter}>{v.grade}</td>\n          </tr>\n        );\n      });\n    console.log(\"sum gpa, credits:\", gpa, totalCredit)\n    setDataRows(z);\n    setTotalGPA(gpa / totalCredit)\n    }, [data]);\n\n    \n    const clearData = () => {\n      setDataItems([])\n      setDataRows([])\n      console.log('cleared items')\n    }\n\n    \n    const deleteClick = (i) => {\n      console.log(i, 'deleted!')\n      data.splice(i,1)\n      setDataItems([...data])\n    }\n\n    return (\n      <Container>\n\n        <Row>\n\n          <Col>\n            <h2>Kasidit's GPA</h2>\n          </Col>\n\n          <Col>\n            <Button onClick={clearData} variant=\"dark\">Clear</Button>\n          </Col>\n\n        </Row>\n\n        <Table striped bordered hover>\n\n          <thead>\n            <tr>\n              <th></th>\n              <th>Subject</th>\n              <th>Term</th>\n              <th>Grade</th>\n            </tr>\n          </thead>\n\n          <tbody>\n            {dataRows}\n          </tbody>\n\n          <tfoot>\n            <tr>\n              <th colSpan={2}></th>\n              <th style={styles.textRight}>GPA</th>\n              <th style={styles.textRight}>{(totalGPA).toFixed(2)}</th>\n            </tr>\n          </tfoot>\n\n        </Table>\n\n       \n\n        </Container>\n    )\n}\n\nexport default GPATable;",{"ruleId":"53","severity":1,"message":"54","line":1,"column":10,"nodeType":"55","messageId":"56","endLine":1,"endColumn":18},{"ruleId":"53","severity":1,"message":"57","line":1,"column":28,"nodeType":"55","messageId":"56","endLine":1,"endColumn":37},{"ruleId":"53","severity":1,"message":"58","line":1,"column":20,"nodeType":"55","messageId":"56","endLine":1,"endColumn":26},{"ruleId":"59","severity":1,"message":"60","line":43,"column":6,"nodeType":"61","endLine":43,"endColumn":12,"suggestions":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"53","severity":1,"message":"54","line":3,"column":18,"nodeType":"55","messageId":"56","endLine":3,"endColumn":26},{"ruleId":"59","severity":1,"message":"67","line":123,"column":8,"nodeType":"61","endLine":123,"endColumn":14,"suggestions":"68"},{"ruleId":"59","severity":1,"message":"69","line":116,"column":8,"nodeType":"61","endLine":116,"endColumn":14,"suggestions":"70"},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'useRef' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'deleteClick'. Either include it or remove the dependency array.","ArrayExpression",["71"],"no-native-reassign",["72"],"no-negated-in-lhs",["73"],"React Hook useEffect has missing dependencies: 'courseData', 'deleteClick', 'styles.textLeft', and 'styles.textleft'. Either include them or remove the dependency array.",["74"],"React Hook useEffect has missing dependencies: 'deleteClick', 'styles.textCenter', and 'subData'. Either include them or remove the dependency array.",["75"],{"desc":"76","fix":"77"},"no-global-assign","no-unsafe-negation",{"desc":"78","fix":"79"},{"desc":"80","fix":"81"},"Update the dependencies array to be: [data, deleteClick]",{"range":"82","text":"83"},"Update the dependencies array to be: [courseData, data, deleteClick, styles.textLeft, styles.textleft]",{"range":"84","text":"85"},"Update the dependencies array to be: [data, deleteClick, styles.textCenter, subData]",{"range":"86","text":"87"},[1333,1339],"[data, deleteClick]",[3779,3785],"[courseData, data, deleteClick, styles.textLeft, styles.textleft]",[3049,3055],"[data, deleteClick, styles.textCenter, subData]"]